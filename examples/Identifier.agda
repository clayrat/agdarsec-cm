module Identifier where

open import Foundations.Prelude
open import Meta.Effect

open import Data.List
open import Data.Char

open import Data.List.NonEmpty as List‚Å∫
open import Data.List.Sized.Interface as SZ
open import Level.Bounded
open import Base 0‚Ñì

record Identifier : ùí∞ where
  constructor mkIdentifier
  field getIdentifier : List‚Å∫ Char

identifier : ‚àÄ[ Parser {‚Ñì = 0‚Ñì}
                       (chars {‚Ñìb = 0‚Ñì} {E = ‚ä§‚Ñì} {A = ‚ä•‚Ñì} ‚¶É bd = Bind-Id ‚¶Ñ)
                       (Identifier 0‚Üë‚Ñì) ]
identifier {x} =
   mkIdentifier <$>C list‚Å∫ alpha
  where instance _ = Bind-Id


-- tests

_ : _‚ààP_ {P = (chars {‚Ñìb = 0‚Ñì} {E = ‚ä§‚Ñì} {A = ‚ä•‚Ñì} ‚¶É bd = Bind-Id ‚¶Ñ)}
         ‚¶É ch = choice-agdarsecT ‚¶É bd = Bind-Id ‚¶Ñ ‚¶Ñ
         "hi"
         identifier
_ = mkIdentifier ('h' ‚à∑¬π 'i' ‚à∑ []) !
